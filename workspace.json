{
  "version": 2,
  "projects": {
    "base-app": {
      "root": "apps/base-app",
      "sourceRoot": "apps/base-app/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/base-app",
            "index": "apps/base-app/src/index.html",
            "main": "apps/base-app/src/main.tsx",
            "polyfills": "apps/base-app/src/polyfills.ts",
            "tsConfig": "apps/base-app/tsconfig.app.json",
            "assets": [
              "apps/base-app/src/favicon.ico",
              "apps/base-app/src/assets"
            ],
            "styles": [],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/base-app/src/environments/environment.ts",
                  "with": "apps/base-app/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "base-app:build",
            "hmr": true
          },
          "configurations": {
            "production": {
              "buildTarget": "base-app:build:production",
              "hmr": false
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/base-app/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/base-app"],
          "options": {
            "jestConfig": "apps/base-app/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "base-app-e2e": {
      "root": "apps/base-app-e2e",
      "sourceRoot": "apps/base-app-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/base-app-e2e/cypress.json",
            "tsConfig": "apps/base-app-e2e/tsconfig.e2e.json",
            "devServerTarget": "base-app:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "base-app:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/base-app-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "fire-app": {
      "root": "apps/fire-app",
      "sourceRoot": "apps/fire-app/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@simondotm/nx-firebase:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/fire-app",
            "main": "apps/fire-app/src/index.ts",
            "tsConfig": "apps/fire-app/tsconfig.app.json",
            "packageJson": "apps/fire-app/package.json",
            "assets": [
              "apps/fire-app/*.md",
              "apps/fire-app/.runtimeconfig.json"
            ]
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "command": "firebase deploy --config firebase.fire-app.json"
          }
        },
        "getconfig": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "command": "firebase functions:config:get --config firebase.fire-app.json > apps/fire-app/.runtimeconfig.json"
          }
        },
        "emulate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "command": "firebase emulators:start --config firebase.fire-app.json"
          }
        },
        "serve": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "nx run fire-app:build --with-deps && nx run fire-app:build --watch"
              },
              {
                "command": "nx run fire-app:emulate"
              }
            ],
            "parallel": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/fire-app/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/fire-app"],
          "options": {
            "jestConfig": "apps/fire-app/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "foobar": {
      "root": "apps/foobar",
      "sourceRoot": "apps/foobar/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@simondotm/nx-firebase:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/foobar",
            "main": "apps/foobar/src/index.ts",
            "tsConfig": "apps/foobar/tsconfig.app.json",
            "packageJson": "apps/foobar/package.json",
            "assets": ["apps/foobar/*.md", "apps/foobar/.runtimeconfig.json"]
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "command": "firebase deploy --config firebase.foobar.json"
          }
        },
        "getconfig": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "command": "firebase functions:config:get --config firebase.foobar.json > apps/foobar/.runtimeconfig.json"
          }
        },
        "emulate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "command": "firebase emulators:start --config firebase.foobar.json"
          }
        },
        "serve": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "nx run foobar:build --with-deps && nx run foobar:build --watch"
              },
              {
                "command": "nx run foobar:emulate"
              }
            ],
            "parallel": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/foobar/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/foobar"],
          "options": {
            "jestConfig": "apps/foobar/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "react-xtend": {
      "root": "libs/react-xtend",
      "sourceRoot": "libs/react-xtend/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/react-xtend/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/react-xtend"],
          "options": {
            "jestConfig": "libs/react-xtend/jest.config.js",
            "passWithNoTests": true
          }
        },
        "build": {
          "executor": "@nrwl/node:package",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/react-xtend",
            "tsConfig": "libs/react-xtend/tsconfig.lib.json",
            "packageJson": "libs/react-xtend/package.json",
            "main": "libs/react-xtend/src/index.ts",
            "assets": [
              "libs/react-xtend/*.md",
              {
                "input": "./libs/react-xtend/src",
                "glob": "**/!(*.ts)",
                "output": "./src"
              },
              {
                "input": "./libs/react-xtend/src",
                "glob": "**/*.d.ts",
                "output": "./src"
              },
              {
                "input": "./libs/react-xtend",
                "glob": "generators.json",
                "output": "."
              },
              {
                "input": "./libs/react-xtend",
                "glob": "executors.json",
                "output": "."
              }
            ]
          }
        }
      }
    },
    "react-xtend-e2e": {
      "root": "apps/react-xtend-e2e",
      "projectType": "application",
      "sourceRoot": "apps/react-xtend-e2e/src",
      "targets": {
        "e2e": {
          "executor": "@nrwl/nx-plugin:e2e",
          "options": {
            "target": "react-xtend:build",
            "jestConfig": "apps/react-xtend-e2e/jest.config.js"
          }
        }
      }
    },
    "types-types": {
      "root": "libs/types",
      "sourceRoot": "libs/types/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/types/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/types"],
          "options": {
            "jestConfig": "libs/types/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "generators": {
    "@nrwl/react": {
      "application": {
        "style": "styled-components",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "styled-components"
      },
      "library": {
        "style": "styled-components",
        "linter": "eslint"
      }
    }
  },
  "defaultProject": "base-app"
}
